name: Build the android APK
permissions:
  contents: read
on:
  push:
    branches:
      - main
      - prod
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - ".gitignore"
      - "fastlane/**"

  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  main_project_module: app
  app_name: Umihi Music
  apk_file_name: UmihiMusic
  original_apk: app-release-unsigned.apk

jobs:
  build-android-apk:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 21
          cache: "gradle"

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Create APK Release
      - name: Build apk release project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assemble

      - uses: filippoLeporati93/android-release-signer@v1
        name: Sign app APK
        id: sign_app
        with:
          releaseDirectory: ${{ env.main_project_module }}/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "36.1.0"

      - name: Rename APK file
        run: sudo mv ${{steps.sign_app.outputs.signedReleaseFile}} /${{env.apk_file_name}}.apk

      - name: Upload APK Release
        uses: actions/upload-artifact@v4
        with:
          name: release-build
          path: /${{env.apk_file_name}}.apk
          overwrite: true
          if-no-files-found: error
  publish-github-release:
    permissions:
      packages: write
      contents: write
    if: github.ref_name == 'prod'
    needs:
      - build-android-apk
    runs-on: ubuntu-latest
    name: Publish the GitHub release
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: Extract version
        id: get_version
        run: |
          versionMajor=$(grep -oP 'val\s+versionMajor\s*=\s*\K[0-9]+' ${{ env.main_project_module }}/build.gradle.kts)
          versionMinor=$(grep -oP 'val\s+versionMinor\s*=\s*\K[0-9]+' ${{ env.main_project_module }}/build.gradle.kts)
          versionPatch=$(grep -oP 'val\s+versionPatch\s*=\s*\K[0-9]+' ${{ env.main_project_module }}/build.gradle.kts)

          version="${versionMajor}.${versionMinor}.${versionPatch}"

          echo "version=$version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create a Release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: v${{ steps.get_version.outputs.version }}
          artifacts: ./artifacts/**/*.apk
          generateReleaseNotes: true
          draft: true
